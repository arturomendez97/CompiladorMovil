/* Generated By:JavaCC: Do not edit this line. compConstants.java */
package com.example.myapplication.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 1;
  /** RegularExpression Id. */
  int PROGRAMA = 2;
  /** RegularExpression Id. */
  int VAR = 3;
  /** RegularExpression Id. */
  int INT = 4;
  /** RegularExpression Id. */
  int FLOAT = 5;
  /** RegularExpression Id. */
  int CHAR = 6;
  /** RegularExpression Id. */
  int VOID = 7;
  /** RegularExpression Id. */
  int MODULE = 8;
  /** RegularExpression Id. */
  int RETURN = 9;
  /** RegularExpression Id. */
  int READ = 10;
  /** RegularExpression Id. */
  int WRITE = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int THEN = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int DO = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int TO = 18;
  /** RegularExpression Id. */
  int CALL = 19;
  /** RegularExpression Id. */
  int PARENIZQ = 20;
  /** RegularExpression Id. */
  int PARENDER = 21;
  /** RegularExpression Id. */
  int CURLYIZQ = 22;
  /** RegularExpression Id. */
  int CURLYDER = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int COLON = 25;
  /** RegularExpression Id. */
  int SEMICOLON = 26;
  /** RegularExpression Id. */
  int MAS = 27;
  /** RegularExpression Id. */
  int MENOS = 28;
  /** RegularExpression Id. */
  int MULT = 29;
  /** RegularExpression Id. */
  int DIV = 30;
  /** RegularExpression Id. */
  int ASIGNACION = 31;
  /** RegularExpression Id. */
  int MASQUE = 32;
  /** RegularExpression Id. */
  int MENOSQUE = 33;
  /** RegularExpression Id. */
  int IGUAL = 34;
  /** RegularExpression Id. */
  int NOIGUAL = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int CTEI = 38;
  /** RegularExpression Id. */
  int CTEF = 39;
  /** RegularExpression Id. */
  int ID = 40;
  /** RegularExpression Id. */
  int CTEC = 41;
  /** RegularExpression Id. */
  int BRACKETIZQ = 42;
  /** RegularExpression Id. */
  int BRACKETDER = 43;
  /** RegularExpression Id. */
  int COMILLA = 44;
  /** RegularExpression Id. */
  int MAYORIGUAL = 45;
  /** RegularExpression Id. */
  int MENORIGUAL = 46;
  /** RegularExpression Id. */
  int BOOL = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"main\"",
    "\"program\"",
    "\"var\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"void\"",
    "\"module\"",
    "\"return\"",
    "\"read\"",
    "\"write\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"to\"",
    "\"call\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\":\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"!=\"",
    "\"&\"",
    "\"|\"",
    "<CTEI>",
    "<CTEF>",
    "<ID>",
    "<CTEC>",
    "\"[\"",
    "\"]\"",
    "\"\\\'\"",
    "\">=\"",
    "\"<=\"",
    "\"bool\"",
    "\" \"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "\"\\n\"",
  };

}
